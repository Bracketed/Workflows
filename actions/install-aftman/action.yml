name: Install Aftman
description: Github action to install the Aftman toolchain manager - A fork of ok-nic/setup-aftman
author: ok-nic

inputs:
    version:
        description: Git Release Tag (usually in the form `vX.X.X`)
        required: false
    context:
        description: Path to the `aftman.toml` directory
        default: .
        required: false
    cache:
        description: Enable caching (default `false`)
        default: 'false'
        required: false
    token:
        description: GitHub token via `github.token`
        default: ${{ github.token }}
        required: false

runs:
    using: composite
    steps:
        - name: Download Aftman from LPGhatguy/aftman
          run: |
              case ${{ runner.os }} in
                Linux) pattern="*linux-x86_64.zip" ;;
                macOS) pattern="*macos-x86_64.zip" ;;
                Windows) pattern="*windows-x86_64.zip" ;;
              esac

              gh release download ${{ inputs.version }} --repo LPGhatguy/aftman --pattern $pattern
          env:
              GITHUB_TOKEN: ${{ inputs.token }}
          shell: bash

        - name: Install Aftman
          run: |
              unzip aftman*.zip
              ./aftman self-install
          shell: bash

        - name: Delete artifacts
          run: |
              rm aftman*.zip
              if ${{ runner.os == 'Windows' }}; then
                rm aftman.exe
              else
                rm aftman
              fi
          shell: bash

        - name: Set environment variable
          if: runner.os == 'Windows'
          run: echo "$HOME/.aftman/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          shell: powershell

        - name: Set environment variable
          if: runner.os != 'Windows'
          run: echo "$HOME/.aftman/bin" >> $GITHUB_PATH
          shell: bash

        - name: Create auth file
          run: |
              cat > $HOME/.aftman/auth.toml << EOF
              github = "${{ inputs.token }}"
              EOF
          shell: bash

        - name: Cache binaries
          if: ${{ inputs.cache == 'true' }}
          uses: actions/cache@v3
          with:
              path: |
                  ~/.aftman/bin
                  ~/.aftman/tool-storage
              key: ${{ runner.os }}-aftman-${{hashFiles(format('{0}/{1}', inputs.context, 'aftman.toml'))}}

        - name: Install tools
          run: |
              cd ${{ inputs.context }}
              aftman install --no-trust-check
          shell: bash
